from openai import OpenAI
from pydantic import BaseModel, Field
from typing import List

client = OpenAI()

class Quiz(BaseModel):
    question: str = Field(description="A question for the quiz. Quiz questions should be engaging and interesting.")
    options: List[str] = Field(description="The options for the quiz")
    answer: str = Field(description="The answer to the quiz")

    class Config:
        extra = "forbid"

class Part(BaseModel):
    content: str = Field(description="The content of the part")
    quiz: Quiz = Field(description="A quiz related to the content of the part generated by career_expert.")

    class Config:
        extra = "forbid"

class Review(BaseModel):
    content: str = Field(description="A review of the career experience")
    quiz: List[Quiz] = Field(description="A quiz related to the content of the review generated by career_expert.")

    class Config:
        extra = "forbid"

class Experience(BaseModel):
    instruction: str = Field(description="The instruction for the experience")
    content: str = Field(description="Provide students with a breif experience they could try on our platform to understand what that career is like and if they are interested in it. This should take about 5 minutes.")

    class Config:
        extra = "forbid"

class Script_For_Career_Experience_Helper(BaseModel):
    career: str = Field(description="The career students will experience")
    part1: str = Field(description="Introduction: Set the stage for the career experience (90 seconds)")
    part2: str = Field(description="Rising action: Initial challenges and learning experiences (90 seconds)")
    part3: Part = Field(description="Rising action: Developing skills and overcoming obstacles (90 seconds)")
    part4: str = Field(description="Climax: Key moment or breakthrough in the career (90 seconds)")
    part5: Part = Field(description="Falling action: Reflecting on growth and achievements (90 seconds)")
    part6: str = Field(description="Resolution: Lessons learned and future outlook (90 seconds)")
    part7: str = Field(description="Conclusion: Inspiring message and call to action (90 seconds)")
    abstract_experience: Experience = Field(description="A breif experience students could try online to better understand what that career is like. This should take about 5 minutes.")
    review: Review = Field(description="Review: Reflect on the career experience and its impact (90 seconds)")

    class Config:
        extra = "forbid"

def generate_script_for_career_experience_helper(career: str):
    response = client.beta.chat.completions.parse(
        model="gpt-4o-2024-08-06",
        messages=[
            {"role": "system", "content": "You are an experienced professional providing realistic insights into various careers. Your goal is to create an authentic and informative narrative about the day-to-day experiences in different occupations. You have to keep your tone as bright and engaging as possible. Your response must be **in KOREAN**.", "name": "career_expert"},
            {"role": "user", "content": f"""Create a exciting narrative about the experience of being a {career}. Structure it as follows:

            1. Introduction: Describe the typical work environment and initial responsibilities of a {career}. What does a typical day look like?
            2-3. Skill Development: What are the key skills required in this role? Describe common challenges faced and how professionals overcome them.
            4. Key Moment: Highlight a significant project or task that showcases the impact of this career.
            5-6. Career Growth: Explain how professionals in this field typically progress. What are the opportunities for advancement?
            7. Industry Insights: Provide current trends or future outlook for this career.
            8. Hands-on Experience: Suggest a practical, career-related activity that can be done to gain insight into this profession. This should take about 5 minutes and be something that students can try on our platform right away.
            9. Overall review: Reflect on the career experience and its impact.
            
            Each part should be concise, about 90 seconds when read aloud. Use clear, accessible language while maintaining professional accuracy. Provide specific examples and realistic scenarios to give a true sense of the career."""}
        ],
        response_format=Script_For_Career_Experience_Helper
    )
    return response.choices[0].message.content


def generate_image_for_career_experience_helper(career: str):
    try:
        image = client.images.generate(
            model="dall-e-3",
            prompt=f"A realistic image of a person working as a {career}.",
            size="1024x1024"
        )
        return image.data[0].url
    except Exception as e:
        print(f"Error generating image: {str(e)}")
        return None
